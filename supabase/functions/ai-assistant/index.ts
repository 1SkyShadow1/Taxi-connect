import { serve } from "https://deno.land/std@0.168.0/http/server.ts"

const corsHeaders = {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Headers': 'authorization, x-client-info, apikey, content-type',
}

serve(async (req) => {
  if (req.method === 'OPTIONS') {
    return new Response('ok', { headers: corsHeaders })
  }

  try {
    const { message, context, history } = await req.json()

    // Simulate AI assistant response based on common taxi app queries
    const lowerMessage = message.toLowerCase()
    let response = ''

    if (lowerMessage.includes('book') || lowerMessage.includes('ride')) {
      response = "To book a ride:\n\n1. Enter your pickup location\n2. Enter your destination\n3. Choose shared or private ride\n4. Select payment method\n5. Confirm your booking\n\nNeed help with any specific step?"
    } else if (lowerMessage.includes('payment') || lowerMessage.includes('wallet')) {
      response = "For payment issues:\n\n‚Ä¢ Check your wallet balance in the Wallet section\n‚Ä¢ You can top up using cards, bank transfers, or mobile money\n‚Ä¢ Trip payments are automatically deducted from your wallet\n‚Ä¢ For payment failures, try a different payment method\n\nWhat specific payment issue can I help with?"
    } else if (lowerMessage.includes('driver') || lowerMessage.includes('late')) {
      response = "For driver-related concerns:\n\n‚Ä¢ Drivers typically arrive within 5-10 minutes\n‚Ä¢ You can track your driver's location in real-time\n‚Ä¢ Use the call feature to contact your driver\n‚Ä¢ If there's a delay, you can cancel and rebook\n\nWould you like me to help you contact your driver?"
    } else if (lowerMessage.includes('cancel') || lowerMessage.includes('refund')) {
      response = "Cancellation and refunds:\n\n‚Ä¢ You can cancel rides before the driver arrives\n‚Ä¢ Free cancellation within 2 minutes of booking\n‚Ä¢ After pickup, cancellation fees may apply\n‚Ä¢ Refunds are processed within 24 hours to your wallet\n\nDo you need to cancel a current booking?"
    } else if (lowerMessage.includes('safety') || lowerMessage.includes('emergency')) {
      response = "Safety features:\n\n‚Ä¢ All drivers are verified and tracked\n‚Ä¢ Use the emergency button for immediate help\n‚Ä¢ Share your trip details with contacts\n‚Ä¢ Rate drivers after each trip\n‚Ä¢ Report any issues through the app\n\nAre you currently in an emergency situation?"
    } else if (lowerMessage.includes('account') || lowerMessage.includes('profile')) {
      response = "Account management:\n\n‚Ä¢ Update your profile in Settings\n‚Ä¢ Add emergency contacts for safety\n‚Ä¢ Manage payment methods\n‚Ä¢ View trip history\n‚Ä¢ Adjust notification preferences\n\nWhat would you like to update in your account?"
    } else {
      response = "I'm here to help with your SA Taxi Connect experience! I can assist with:\n\nüöó Booking rides\nüí≥ Payment & wallet issues\nüë®‚Äç‚úàÔ∏è Driver concerns\n‚ùå Cancellations & refunds\nüõ°Ô∏è Safety features\nüë§ Account settings\n\nWhat can I help you with today?"
    }

    return new Response(JSON.stringify({ 
      response,
      timestamp: new Date().toISOString(),
      context: 'taxi_app_support'
    }), {
      headers: { ...corsHeaders, 'Content-Type': 'application/json' },
    })
  } catch (error) {
    return new Response(JSON.stringify({ 
      response: "I'm sorry, I'm having trouble processing your request right now. Please try again or contact our support team directly.",
      error: error.message 
    }), {
      headers: { ...corsHeaders, 'Content-Type': 'application/json' },
      status: 500
    })
  }
})